---
title: Using the Synopsys Seeker IAST Service Broker for VMware Tanzu
owner: Partners
---

<strong><%= modified_date %></strong>

This topic describes how to use the Synopsys Seeker IAST Service Broker for VMware Tanzu.

## <a id='using'></a> How the Synopsys Seeker IAST Service Broker for VMware Tanzu Works

The Synopsys Seeker IAST Service Broker tile relies on following buildpacks:

1. <https://github.com/cloudfoundry/nodejs-buildpack> - used to monitor Node.js apps
2. <https://github.com/cloudfoundry/java-buildpack> - used to monitor Java apps

Each buildpack is in charge of pulling the agent from the server and injecting
it into the app during the deployment.

The buildpack then sets the following environment variable:

* `SEEKER_SERVER_URL`

This variable is used by the agent to communicate with the server.

**Java**:
In Java apps, the buildpack adds the javaagent jvm argument that points to the `seeker-agent.jar`.

**Node.js**:
In Node.js apps, the agent must be included from the source code. The first line of code should be:

```
require('@synopsys-sig/seeker-inline');
```

If adding this line to the code is problematic, use a special environment variable
that injects this line of code automatically:

```
cf set-env cf-nodejs SEEKER\_APP\_ENTRY\_POINT ./server.js
```

The **SEEKER\_APP\_ENTRY\_POINT** must point to the main module. It must be the full path to
the JS file relative to the root folder of your app.

## <a id='using'></a> Using the Synopsys Seeker IAST Service Broker for VMware Tanzu

Synopsys Seeker IAST Service Broker for VMware Tanzu requires that you log in to a VMware Tanzu environment and have selected your organization and space.

1..Verify **synopsys-seeker** service displays in the Marketplace using the command:
  ```
  cf marketplace
  ```
2. Create a service instance of the synopsys-seeker using the command:
  ```
  cf create-service synopsys-seeker standard INSTANCE-NAME
  ```
3. Deploy your app without starting it:
  **For Node.js/Java apps**:
  ```
  cf push --no-start APP-NAME
  ```
4. Bind the Seeker service instance to the app using the command:
```
cf bind-service APP-NAME INSTANCE-NAME
```
5. Start the app
  ```
  cf start APP-NAME
  ```
6. To view the findings, navigate to the Seeker Enterprise server.
  ![Seeker Enterprise server](images/seeker-vuln-list.png)
